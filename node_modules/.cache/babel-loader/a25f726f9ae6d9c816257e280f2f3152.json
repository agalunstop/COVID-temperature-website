{"ast":null,"code":"var _jsxFileName = \"/Users/sonalgupta/Documents/research/Weather data/website/covid19india-react/src/components/row.js\";\nimport { formatDate, formatDateAbsolute, formatNumber } from '../utils/commonfunctions';\nimport { formatDistance } from 'date-fns';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport * as Icon from 'react-feather';\nimport { Link } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\n\nfunction Row(props) {\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn') ? localStorage.getItem('district.sortColumn') : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending') ? localStorage.getItem('district.isAscending') === 'true' : false\n  });\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n    setShowDistricts(!showDistricts);\n  };\n\n  const handleTooltip = e => {\n    e.stopPropagation();\n  };\n\n  const sortDistricts = useCallback(aDistricts => {\n    const sorted = {};\n\n    if (aDistricts) {\n      Object.keys(aDistricts).sort((district1, district2) => {\n        const sortColumn = sortData.sortColumn;\n        const value1 = sortColumn === 'district' ? district1 : parseInt(aDistricts[district1].confirmed);\n        const value2 = sortColumn === 'district' ? district2 : parseInt(aDistricts[district2].confirmed);\n        const comparisonValue = value1 > value2 ? 1 : value1 === value2 && district1 > district2 ? 1 : -1;\n        return sortData.isAscending ? comparisonValue : comparisonValue * -1;\n      }).forEach(key => {\n        sorted[key] = aDistricts[key];\n      });\n      setSortedDistricts(sorted);\n    }\n  }, [sortData.isAscending, sortData.sortColumn]);\n\n  const handleSort = column => {\n    const isAscending = sortData.sortColumn === column ? !sortData.isAscending : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: `state ${props.total ? 'is-total' : ''} ${props.index % 2 === 0 ? 'is-odd' : ''} ${props.isHighlighted ? 'is-highlighted' : ''}`,\n    onMouseEnter: () => {\n      var _props$onHighlightSta;\n\n      return (_props$onHighlightSta = props.onHighlightState) === null || _props$onHighlightSta === void 0 ? void 0 : _props$onHighlightSta.call(props, state, props.index);\n    },\n    onMouseLeave: () => {\n      var _props$onHighlightSta2;\n\n      return (_props$onHighlightSta2 = props.onHighlightState) === null || _props$onHighlightSta2 === void 0 ? void 0 : _props$onHighlightSta2.call(props);\n    },\n    onClick: !props.total ? handleReveal : null,\n    style: {\n      background: props.index % 2 === 0 ? '#f8f9fa' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      fontWeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table__title-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, !props.total && /*#__PURE__*/React.createElement(\"span\", {\n    className: `dropdown ${props.reveal && showDistricts ? 'rotateRightDown' : 'rotateDownRight'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon.ChevronDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"actual__title-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, state.state, state.statenotes && /*#__PURE__*/React.createElement(\"span\", {\n    onClick: handleTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-tip\": [`${state.statenotes}`],\n    \"data-event\": \"touchstart mouseover\",\n    \"data-event-off\": \"mouseleave\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Icon.Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ReactTooltip, {\n    place: \"right\",\n    type: \"dark\",\n    effect: \"solid\",\n    multiline: true,\n    scrollHide: true,\n    globalEventOff: \"click\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"deltas\",\n    style: {\n      color: '#ff073a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, state.deltaconfirmed > 0 && /*#__PURE__*/React.createElement(Icon.ArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 42\n    }\n  }), state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"table__count-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, parseInt(state.confirmed) === 0 ? '-' : formatNumber(state.confirmed))), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, parseInt(state.active) === 0 ? '-' : formatNumber(state.active)), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"deltas\",\n    style: {\n      color: '#28a745'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, state.deltarecovered > 0 && /*#__PURE__*/React.createElement(Icon.ArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 42\n    }\n  }), state.deltarecovered > 0 ? `${state.deltarecovered}` : ''), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"table__count-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, parseInt(state.recovered) === 0 ? '-' : formatNumber(state.recovered))), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"deltas\",\n    style: {\n      color: '#6c757d'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, state.deltadeaths > 0 && /*#__PURE__*/React.createElement(Icon.ArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 39\n    }\n  }), state.deltadeaths > 0 ? `${state.deltadeaths}` : ''), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"table__count-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, parseInt(state.deaths) === 0 ? '-' : formatNumber(state.deaths)))), showDistricts && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: 'state-last-update',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"last-update\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \"Last updated\\xA0\"), /*#__PURE__*/React.createElement(\"h6\", {\n    title: isNaN(Date.parse(formatDate(props.state.lastupdatedtime))) ? '' : formatDateAbsolute(props.state.lastupdatedtime),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, isNaN(Date.parse(formatDate(props.state.lastupdatedtime))) ? '' : `${formatDistance(new Date(formatDate(props.state.lastupdatedtime)), new Date())} ago`)))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: `district-heading`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    onClick: e => handleSort('district'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"abbr\", {\n    title: \"District\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, \"District\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: sortData.sortColumn === 'district' ? 'initial' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, sortData.isAscending ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"td\", {\n    onClick: e => handleSort('confirmed'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"abbr\", {\n    className: `${window.innerWidth <= 769 ? 'is-cherry' : ''}`,\n    title: \"Confirmed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, window.innerWidth <= 769 ? window.innerWidth <= 375 ? 'C' : 'Cnfmd' : 'Confirmed'), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: sortData.sortColumn === 'confirmed' ? 'initial' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, sortData.isAscending ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arrow-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"state-page-link\",\n    colSpan: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `state/${state.statecode}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"abbr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, \"Visit state page\"), /*#__PURE__*/React.createElement(Icon.ArrowRightCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  })))))), sortedDistricts && showDistricts && Object.keys(sortedDistricts).filter(district => district.toLowerCase() !== 'unknown').map((district, index) => {\n    if (district.toLowerCase() !== 'unknown') {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        className: `district ${index % 2 === 0 ? 'is-odd' : ''} ${props.highlightedDistrict === district ? 'is-highlighted' : ''}`,\n        style: {\n          background: index % 2 === 0 ? '#f8f9fa' : ''\n        },\n        onMouseEnter: () => {\n          var _props$onHighlightDis;\n\n          return (_props$onHighlightDis = props.onHighlightDistrict) === null || _props$onHighlightDis === void 0 ? void 0 : _props$onHighlightDis.call(props, district, state, props.index);\n        },\n        onMouseLeave: () => {\n          var _props$onHighlightDis2;\n\n          return (_props$onHighlightDis2 = props.onHighlightDistrict) === null || _props$onHighlightDis2 === void 0 ? void 0 : _props$onHighlightDis2.call(props);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"unknown\",\n        style: {\n          fontWeight: 600\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 19\n        }\n      }, district, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: handleTooltip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"data-for\": \"unknown\",\n        \"data-tip\": [[sortedDistricts[district].notes]],\n        \"data-event\": \"touchstart mouseover\",\n        \"data-event-off\": \"mouseleave\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 23\n        }\n      }, sortedDistricts[district].notes && /*#__PURE__*/React.createElement(Icon.Info, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 61\n        }\n      })))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"deltas\",\n        style: {\n          color: '#ff073a'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }\n      }, sortedDistricts[district].delta.confirmed > 0 && /*#__PURE__*/React.createElement(Icon.ArrowUp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }\n      }), sortedDistricts[district].delta.confirmed > 0 ? `${sortedDistricts[district].delta.confirmed}` : ''), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"table__count-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }\n      }, formatNumber(sortedDistricts[district].confirmed))));\n    }\n\n    return null;\n  }), (sortedDistricts === null || sortedDistricts === void 0 ? void 0 : sortedDistricts.Unknown) && showDistricts && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: `district`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"unknown\",\n    style: {\n      fontWeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }, \"Unknown\", /*#__PURE__*/React.createElement(\"span\", {\n    onClick: handleTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-for\": \"unknown\",\n    \"data-tip\": 'Awaiting patient-level details from State Bulletin',\n    \"data-event\": \"touchstart mouseover\",\n    \"data-event-off\": \"mouseleave\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon.Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"deltas\",\n    style: {\n      color: '#ff073a'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, sortedDistricts['Unknown'].delta.confirmed > 0 && /*#__PURE__*/React.createElement(Icon.ArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 19\n    }\n  }), sortedDistricts['Unknown'].delta.confirmed > 0 ? `${sortedDistricts['Unknown'].delta.confirmed}` : ''), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"table__count-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, formatNumber(sortedDistricts['Unknown'].confirmed))))), showDistricts && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"unknown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ReactTooltip, {\n    id: \"unknown\",\n    place: \"right\",\n    type: \"dark\",\n    effect: \"solid\",\n    multiline: true,\n    scrollHide: true,\n    globalEventOff: \"click\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: `spacer`,\n    style: {\n      display: props.reveal && !props.total ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default React.memo(Row);","map":{"version":3,"sources":["/Users/sonalgupta/Documents/research/Weather data/website/covid19india-react/src/components/row.js"],"names":["formatDate","formatDateAbsolute","formatNumber","formatDistance","React","useState","useEffect","useCallback","Icon","Link","ReactTooltip","Row","props","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","showDistricts","setShowDistricts","sortData","setSortData","sortColumn","localStorage","getItem","isAscending","handleReveal","handleTooltip","e","stopPropagation","sortDistricts","aDistricts","sorted","Object","keys","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","forEach","key","handleSort","column","setItem","total","index","isHighlighted","onHighlightState","background","fontWeight","reveal","statenotes","color","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","isNaN","Date","parse","lastupdatedtime","display","window","innerWidth","statecode","filter","district","toLowerCase","map","highlightedDistrict","onHighlightDistrict","notes","delta","Unknown","memo"],"mappings":"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","sourcesContent":["import {\n  formatDate,\n  formatDateAbsolute,\n  formatNumber,\n} from '../utils/commonfunctions';\n\nimport {formatDistance} from 'date-fns';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\n\nfunction Row(props) {\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n    setShowDistricts(!showDistricts);\n  };\n\n  const handleTooltip = (e) => {\n    e.stopPropagation();\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={`state ${props.total ? 'is-total' : ''} ${\n          props.index % 2 === 0 ? 'is-odd' : ''\n        } ${props.isHighlighted ? 'is-highlighted' : ''}`}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        onClick={!props.total ? handleReveal : null}\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\n      >\n        <td style={{fontWeight: 600}}>\n          <div className=\"table__title-wrapper\">\n            {!props.total && (\n              <span\n                className={`dropdown ${\n                  props.reveal && showDistricts\n                    ? 'rotateRightDown'\n                    : 'rotateDownRight'\n                }`}\n              >\n                <Icon.ChevronDown />\n              </span>\n            )}\n            <span className=\"actual__title-wrapper\">\n              {state.state}\n              {state.statenotes && (\n                <span onClick={handleTooltip}>\n                  <span\n                    data-tip={[`${state.statenotes}`]}\n                    data-event=\"touchstart mouseover\"\n                    data-event-off=\"mouseleave\"\n                  >\n                    <Icon.Info />\n                  </span>\n                  <ReactTooltip\n                    place=\"right\"\n                    type=\"dark\"\n                    effect=\"solid\"\n                    multiline={true}\n                    scrollHide={true}\n                    globalEventOff=\"click\"\n                  />\n                </span>\n              )}\n            </span>\n          </div>\n        </td>\n        <td>\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.confirmed) === 0\n              ? '-'\n              : formatNumber(state.confirmed)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {parseInt(state.active) === 0 ? '-' : formatNumber(state.active)}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          <span className=\"deltas\" style={{color: '#28a745'}}>\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.recovered) === 0\n              ? '-'\n              : formatNumber(state.recovered)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.deaths) === 0 ? '-' : formatNumber(state.deaths)}\n          </span>\n        </td>\n      </tr>\n\n      {showDistricts && (\n        <React.Fragment>\n          <tr className={'state-last-update'}>\n            <td colSpan={2}>\n              <div className=\"last-update\">\n                <h6>Last updated&nbsp;</h6>\n                <h6\n                  title={\n                    isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                      ? ''\n                      : formatDateAbsolute(props.state.lastupdatedtime)\n                  }\n                >\n                  {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                    ? ''\n                    : `${formatDistance(\n                        new Date(formatDate(props.state.lastupdatedtime)),\n                        new Date()\n                      )} ago`}\n                </h6>\n              </div>\n            </td>\n          </tr>\n\n          <tr className={`district-heading`}>\n            <td onClick={(e) => handleSort('district')}>\n              <div className=\"heading-content\">\n                <abbr title=\"District\">District</abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'district' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </td>\n            <td onClick={(e) => handleSort('confirmed')}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                  title=\"Confirmed\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                      ? 'C'\n                      : 'Cnfmd'\n                    : 'Confirmed'}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </td>\n            <td className=\"state-page-link\" colSpan={3}>\n              <Link to={`state/${state.statecode}`}>\n                <div>\n                  <abbr>Visit state page</abbr>\n                  <Icon.ArrowRightCircle />\n                </div>\n              </Link>\n            </td>\n          </tr>\n        </React.Fragment>\n      )}\n\n      {sortedDistricts &&\n        showDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== 'unknown')\n          .map((district, index) => {\n            if (district.toLowerCase() !== 'unknown') {\n              return (\n                <tr\n                  key={index}\n                  className={`district ${index % 2 === 0 ? 'is-odd' : ''} ${\n                    props.highlightedDistrict === district\n                      ? 'is-highlighted'\n                      : ''\n                  }`}\n                  style={{\n                    background: index % 2 === 0 ? '#f8f9fa' : '',\n                  }}\n                  onMouseEnter={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\n                >\n                  <td className=\"unknown\" style={{fontWeight: 600}}>\n                    {district}\n                    <span onClick={handleTooltip}>\n                      <span\n                        data-for=\"unknown\"\n                        data-tip={[[sortedDistricts[district].notes]]}\n                        data-event=\"touchstart mouseover\"\n                        data-event-off=\"mouseleave\"\n                      >\n                        {sortedDistricts[district].notes && <Icon.Info />}\n                      </span>\n                    </span>\n                  </td>\n                  <td>\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : ''}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {formatNumber(sortedDistricts[district].confirmed)}\n                    </span>\n                  </td>\n                </tr>\n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && showDistricts && (\n        <React.Fragment>\n          <tr className={`district`}>\n            <td className=\"unknown\" style={{fontWeight: 600}}>\n              Unknown\n              <span onClick={handleTooltip}>\n                <span\n                  data-for=\"unknown\"\n                  data-tip={\n                    'Awaiting patient-level details from State Bulletin'\n                  }\n                  data-event=\"touchstart mouseover\"\n                  data-event-off=\"mouseleave\"\n                >\n                  <Icon.Info />\n                </span>\n              </span>\n            </td>\n            <td>\n              <span className=\"deltas\" style={{color: '#ff073a'}}>\n                {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                  <Icon.ArrowUp />\n                )}\n                {sortedDistricts['Unknown'].delta.confirmed > 0\n                  ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                  : ''}\n              </span>\n              <span className=\"table__count-text\">\n                {formatNumber(sortedDistricts['Unknown'].confirmed)}\n              </span>\n            </td>\n          </tr>\n        </React.Fragment>\n      )}\n\n      {showDistricts && (\n        <React.Fragment>\n          <tr>\n            <td colSpan={2}>\n              <span className=\"unknown\">\n                <ReactTooltip\n                  id=\"unknown\"\n                  place=\"right\"\n                  type=\"dark\"\n                  effect=\"solid\"\n                  multiline={true}\n                  scrollHide={true}\n                  globalEventOff=\"click\"\n                />\n              </span>\n            </td>\n          </tr>\n        </React.Fragment>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(Row);\n"]},"metadata":{},"sourceType":"module"}