{"ast":null,"code":"var _jsxFileName = \"/Users/sonalgupta/Documents/research/Weather data/website/covid19india-react/src/components/Charts/growthtrendchart.js\";\nimport { getStateName } from '../../utils/commonfunctions';\nimport moment from 'moment';\nimport React from 'react';\nimport { Line, defaults } from 'react-chartjs-2';\n\nfunction GrowthTrendChart(props) {\n  const dates = [];\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const statesData = new Map();\n  const statesDailyData = new Map();\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach(key => {\n      if (key === 'date') {\n        dates.push(moment(data.date.trim(), 'DD MMM').utcOffset('+05:30'));\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n\n      if (currentValue === 0 && !statesData.has(key)) {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n        statesDailyData.set(key, []);\n      }\n\n      const previousValue = statesData.get(key).length > 0 ? parseInt(statesData.get(key)[statesData.get(key).length - 1].x) : 0;\n      const stateData = statesDailyData.get(key);\n      let weekSum = 0;\n\n      for (let i = 1; i <= 7; ++i) {\n        const idx = stateData.length - i;\n\n        if (idx >= 0) {\n          weekSum += stateData[idx];\n        }\n      }\n\n      statesData.get(key).push({\n        x: previousValue + currentValue,\n        y: weekSum\n      });\n      statesDailyData.get(key).push(currentValue);\n    });\n  });\n  const sortedMap = new Map([...statesData.entries()].sort((a, b) => {\n    return a[1][a[1].length - 1].x < b[1][b[1].length - 1].x ? 1 : -1;\n  }));\n  const colors = ['#ff073a', '#28a745', '#342ead', '#7D5BA6', '#DD7596', '#16c8f0', '#f67575', '#2b580c', '#9D44B5', '#91132d', '#6D9DC5', '#2b580c', '#6c757d', '#f67575', '#d4f8e8'];\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      data: statesData.get(key),\n      label: getStateName(key),\n      order: index,\n      borderWidth: 1.0,\n      borderCapStyle: 'round',\n      borderColor: colors[index],\n      pointBackgroundColor: colors[index],\n      pointHoverRadius: 1.0\n    });\n    index++;\n  });\n  const dataset = {\n    datasets: datasets\n  };\n  const options = {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index'\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        cubicInterpolationMode: 'monotone'\n      }\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20\n      }\n    },\n    scales: {\n      yAxes: [{\n        type: 'logarithmic',\n        ticks: {\n          beginAtZero: true,\n          min: 1,\n          max: 2000,\n          precision: 0,\n          callback: function (value, index, values) {\n            return Number(value.toString());\n          }\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'New Cases (since last 7 days)'\n        },\n        gridLines: {\n          color: 'rgba(0, 0, 0, 0)'\n        }\n      }],\n      xAxes: [{\n        type: 'logarithmic',\n        ticks: {\n          beginAtZero: true,\n          min: 0,\n          max: 2000,\n          precision: 0,\n          callback: function (value, index, values) {\n            return Number(value.toString());\n          }\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Total Cases'\n        },\n        gridLines: {\n          color: 'rgba(0, 0, 0, 0)'\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charts-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: dataset,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default GrowthTrendChart;","map":{"version":3,"sources":["/Users/sonalgupta/Documents/research/Weather data/website/covid19india-react/src/components/Charts/growthtrendchart.js"],"names":["getStateName","moment","React","Line","defaults","GrowthTrendChart","props","dates","global","elements","line","fill","tooltips","intersect","mode","position","backgroundColor","displayColors","borderColor","borderWidth","titleFontColor","bodyFontColor","caretPadding","legend","display","hover","data","length","statesData","Map","statesDailyData","forEach","index","status","Object","keys","key","push","date","trim","utcOffset","currentValue","parseInt","has","set","previousValue","get","x","stateData","weekSum","i","idx","y","sortedMap","entries","sort","a","b","colors","datasets","label","order","borderCapStyle","pointBackgroundColor","pointHoverRadius","dataset","options","responsive","events","maintainAspectRatio","point","radius","cubicInterpolationMode","layout","padding","left","right","top","bottom","scales","yAxes","type","ticks","beginAtZero","min","max","precision","callback","value","values","Number","toString","scaleLabel","labelString","gridLines","color","xAxes","title"],"mappings":"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","sourcesContent":["import {getStateName} from '../../utils/commonfunctions';\n\nimport moment from 'moment';\nimport React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nfunction GrowthTrendChart(props) {\n  const dates = [];\n\n  defaults.global.elements.line.fill = false;\n\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n  const statesDailyData = new Map();\n\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        dates.push(moment(data.date.trim(), 'DD MMM').utcOffset('+05:30'));\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n\n      if (currentValue === 0 && !statesData.has(key)) {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n        statesDailyData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1].x)\n          : 0;\n\n      const stateData = statesDailyData.get(key);\n      let weekSum = 0;\n      for (let i = 1; i <= 7; ++i) {\n        const idx = stateData.length - i;\n        if (idx >= 0) {\n          weekSum += stateData[idx];\n        }\n      }\n      statesData.get(key).push({x: previousValue + currentValue, y: weekSum});\n      statesDailyData.get(key).push(currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1].x < b[1][b[1].length - 1].x ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#ff073a',\n    '#28a745',\n    '#342ead',\n    '#7D5BA6',\n    '#DD7596',\n    '#16c8f0',\n    '#f67575',\n    '#2b580c',\n    '#9D44B5',\n    '#91132d',\n    '#6D9DC5',\n    '#2b580c',\n    '#6c757d',\n    '#f67575',\n    '#d4f8e8',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      data: statesData.get(key),\n      label: getStateName(key),\n      order: index,\n      borderWidth: 1.0,\n      borderCapStyle: 'round',\n      borderColor: colors[index],\n      pointBackgroundColor: colors[index],\n      pointHoverRadius: 1.0,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    datasets: datasets,\n  };\n\n  const options = {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        cubicInterpolationMode: 'monotone',\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'logarithmic',\n          ticks: {\n            beginAtZero: true,\n            min: 1,\n            max: 2000,\n            precision: 0,\n            callback: function (value, index, values) {\n              return Number(value.toString());\n            },\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'New Cases (since last 7 days)',\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'logarithmic',\n          ticks: {\n            beginAtZero: true,\n            min: 0,\n            max: 2000,\n            precision: 0,\n            callback: function (value, index, values) {\n              return Number(value.toString());\n            },\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'Total Cases',\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default GrowthTrendChart;\n"]},"metadata":{},"sourceType":"module"}