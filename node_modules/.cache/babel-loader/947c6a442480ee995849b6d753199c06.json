{"ast":null,"code":"var _jsxFileName = \"/Users/sonalgupta/Documents/research/Weather data/website/covid19india-react/src/components/timeseries.js\";\nimport { testedToolTip } from './tooltips';\nimport { sliceTimeseriesFromEnd, formatNumber } from '../utils/commonfunctions';\nimport { useResizeObserver } from '../utils/hooks';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as Icon from 'react-feather';\n\nfunction TimeSeries(props) {\n  const [lastDaysCount, setLastDaysCount] = useState(window.innerWidth > 512 ? Infinity : 30);\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(0);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [chartType, setChartType] = useState(props.type);\n  const [moving, setMoving] = useState(false);\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n  const svgRef5 = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const transformTimeSeries = useCallback(timeseries => {\n    if (timeseries.length > 1) {\n      const slicedTimeseries = sliceTimeseriesFromEnd(timeseries, lastDaysCount);\n      setIndex(slicedTimeseries.length - 1);\n      setTimeseries(slicedTimeseries);\n    }\n  }, [lastDaysCount]);\n  useEffect(() => {\n    transformTimeSeries(props.timeseries);\n  }, [lastDaysCount, transformTimeSeries, props.timeseries]);\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n  useEffect(() => {\n    setChartType(props.type);\n  }, [props.type]);\n  const graphData = useCallback(timeseries => {\n    if (!dimensions) return;\n    const width = dimensions.width;\n    const height = dimensions.height; // Margins\n\n    const margin = {\n      top: 15,\n      right: 35,\n      bottom: 25,\n      left: 25\n    };\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const T = timeseries.length;\n    const yBufferTop = 1.2;\n    const yBufferBottom = 1.1;\n    setDatapoint(timeseries[T - 1]);\n    setIndex(T - 1);\n    const svg1 = d3.select(svgRef1.current);\n    const svg2 = d3.select(svgRef2.current);\n    const svg3 = d3.select(svgRef3.current);\n    const svg4 = d3.select(svgRef4.current);\n    const svg5 = d3.select(svgRef5.current);\n    const dateMin = new Date(timeseries[0]['date']);\n    dateMin.setDate(dateMin.getDate() - 1);\n    const dateMax = new Date(timeseries[T - 1]['date']);\n    dateMax.setDate(dateMax.getDate() + 1);\n    const xScale = d3.scaleTime().clamp(true).domain([dateMin, dateMax]).range([margin.left, chartRight]); // Number of x-axis ticks\n\n    const numTicksX = width < 480 ? 4 : 7;\n\n    const xAxis = g => g.attr('class', 'x-axis').call(d3.axisBottom(xScale).ticks(numTicksX));\n\n    const xAxis2 = (g, yScale) => {\n      g.attr('class', 'x-axis2').call(d3.axisBottom(xScale).tickValues([]).tickSize(0)).select('.domain').style('transform', `translateY(${yScale(0)}px)`);\n      if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);else g.select('.domain').attr('opacity', 0);\n    };\n\n    const yAxis = (g, yScale) => g.attr('class', 'y-axis').call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5)); // Arrays of objects\n\n\n    const plotTotal = chartType === 1;\n    const dataTypesTotal = ['totalconfirmed', 'totalactive', 'totalrecovered', 'totaldeceased', 'totaltested'];\n    const dataTypesDaily = ['dailyconfirmed', 'dailyactive', 'dailyrecovered', 'dailydeceased'];\n    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d', '#201aa2'];\n    const svgArray = [svg1, svg2, svg3, svg4];\n    if (plotTotal) svgArray.push(svg5);\n    let yScales;\n\n    if (plotTotal) {\n      const uniformScaleMin = d3.min(timeseries, d => Math.min(d.totalactive, d.totalrecovered, d.totaldeceased));\n      const uniformScaleMax = d3.max(timeseries, d => d.totalconfirmed);\n      const yScaleUniformLinear = d3.scaleLinear().clamp(true).domain([uniformScaleMin, Math.max(1, yBufferTop * uniformScaleMax)]).nice().range([chartBottom, margin.top]);\n      const yScaleUniformLog = d3.scaleLog().clamp(true).domain([Math.max(1, uniformScaleMin), Math.max(1, yBufferTop * uniformScaleMax)]).nice().range([chartBottom, margin.top]);\n      yScales = dataTypesTotal.map(type => {\n        const yScaleLinear = d3.scaleLinear().clamp(true).domain([d3.min(timeseries, d => d[type]), Math.max(1, yBufferTop * d3.max(timeseries, d => d[type]))]).nice().range([chartBottom, margin.top]);\n        const yScaleLog = d3.scaleLog().clamp(true).domain([Math.max(1, d3.min(timeseries, d => d[type])), Math.max(1, yBufferTop * d3.max(timeseries, d => d[type]))]).nice().range([chartBottom, margin.top]);\n        if (mode && type !== 'totaltested') return logMode ? yScaleUniformLog : yScaleUniformLinear;else return logMode ? yScaleLog : yScaleLinear;\n      });\n    } else {\n      const yScaleDailyUniform = d3.scaleLinear().clamp(true).domain([yBufferBottom * Math.min(0, d3.min(timeseries, d => d.dailyactive)), Math.max(1, yBufferTop * d3.max(timeseries, d => Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)))]).nice().range([chartBottom, margin.top]);\n      yScales = dataTypesDaily.map(type => {\n        if (mode) return yScaleDailyUniform;\n        const yScaleLinear = d3.scaleLinear().clamp(true).domain([yBufferBottom * Math.min(0, d3.min(timeseries, d => d[type])), Math.max(1, yBufferTop * d3.max(timeseries, d => d[type]))]).nice().range([chartBottom, margin.top]);\n        return yScaleLinear;\n      });\n    }\n    /* Focus dots */\n\n\n    const focus = svgArray.map((svg, i) => {\n      return svg.selectAll('.focus').data([timeseries[T - 1]], d => d.date).join(enter => enter.append('circle').attr('cx', d => xScale(d.date))).attr('class', 'focus').attr('fill', colors[i]).attr('stroke', colors[i]).attr('r', 4);\n    });\n\n    function mousemove() {\n      const xm = d3.mouse(this)[0];\n      const date = xScale.invert(xm);\n      const bisectDate = d3.bisector(d => d.date).left;\n      let i = bisectDate(timeseries, date, 1);\n\n      if (0 <= i && i < T) {\n        if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\n        setDatapoint(timeseries[i]);\n        setIndex(i);\n        setMoving(true);\n        const d = timeseries[i];\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          if (!isNaN(d[type])) f.attr('cx', xScale(d.date)).attr('cy', yScale(d[type])).attr('opacity', 1);else f.attr('opacity', 0);\n        });\n      }\n    }\n\n    function mouseout() {\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n      setMoving(false);\n      focus.forEach((f, j) => {\n        const yScale = yScales[j];\n        const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n        if (!isNaN(timeseries[T - 1][type])) f.attr('cx', xScale(timeseries[T - 1].date)).attr('cy', yScale(timeseries[T - 1][type])).attr('opacity', 1);else f.attr('opacity', 0);\n      });\n    }\n    /* Begin drawing charts */\n\n\n    svgArray.forEach((svg, i) => {\n      // Transition interval\n      const t = svg.transition().duration(500);\n      const typeTotal = dataTypesTotal[i];\n      const typeDaily = dataTypesDaily[i];\n      const type = plotTotal ? typeTotal : typeDaily;\n      const filteredTimeseries = timeseries.filter(d => !isNaN(d[type]));\n      const color = colors[i];\n      const yScale = yScales[i];\n      /* X axis */\n\n      svg.select('.x-axis').style('transform', `translateY(${chartBottom}px)`).transition(t).call(xAxis);\n      svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n      /* Y axis */\n\n      svg.select('.y-axis').style('transform', `translateX(${chartRight}px)`).transition(t).call(yAxis, yScale);\n      /* Path dots */\n\n      svg.selectAll('.dot').data(filteredTimeseries, d => d.date).join(enter => enter.append('circle').attr('cx', d => xScale(d.date)).attr('cy', chartBottom)).attr('class', 'dot').attr('fill', color).attr('stroke', color).attr('r', 2).transition(t).attr('cx', d => xScale(d.date)).attr('cy', d => yScale(d[type]));\n      if (!isNaN(timeseries[T - 1][type])) focus[i].transition(t).attr('cx', d => xScale(d.date)).attr('cy', d => yScale(d[type])).attr('opacity', 1);else focus[i].transition(t).attr('opacity', 0);\n\n      if (plotTotal) {\n        /* TOTAL TRENDS */\n        svg.selectAll('.stem').remove();\n        const path = svg.selectAll('.trend').data([[...filteredTimeseries].reverse()]).join('path').attr('class', 'trend').attr('fill', 'none').attr('stroke', color + '99').attr('stroke-width', 4); // HACK\n        // Path interpolation is non-trivial. Ideally, a custom path tween\n        // function should be defined which takes care that old path dots\n        // transition synchronously along with the path transition. This hack\n        // simulates that behaviour.\n\n        if (path.attr('d')) {\n          const n = path.node().getTotalLength();\n          const p = path.node().getPointAtLength(n); // Append points at end of path for better interpolation\n\n          path.attr('d', () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T));\n        }\n\n        path.transition(t).attr('opacity', plotTotal ? 1 : 0).attr('d', d3.line().x(d => xScale(d.date)).y(d => yScale(d[typeTotal])).curve(d3.curveMonotoneX)); // Using d3-interpolate-path\n        // .attrTween('d', function (d) {\n        //   var previous = path.attr('d');\n        //   var current = line(d);\n        //   return interpolatePath(previous, current);\n        // });\n      } else {\n        /* DAILY TRENDS */\n        svg.selectAll('.trend').remove();\n        svg.selectAll('.stem').data(timeseries, d => d.date).join(enter => enter.append('line').attr('x1', d => xScale(d.date)).attr('x2', d => xScale(d.date)).attr('y1', chartBottom).attr('y2', chartBottom)).attr('class', 'stem').style('stroke', color + '99').style('stroke-width', 4).transition(t).attr('y1', yScale(0)).attr('x1', d => xScale(d.date)).attr('x2', d => xScale(d.date)).attr('y2', d => yScale(d[typeDaily]));\n      }\n\n      svg.on('mousemove', mousemove).on('touchmove', mousemove).on('mouseout', mouseout).on('touchend', mouseout);\n    });\n  }, [dimensions, chartType, logMode, mode]);\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n  const focusDate = moment(datapoint.date).utcOffset('+05:30');\n  const dateStr = focusDate.format('DD MMMM');\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased'; // Function for calculate increased/decreased count for each type of data\n\n  const currentStatusCount = chartType => {\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length) return '';\n    const currentDiff = timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TimeSeries fadeInUp\",\n    style: {\n      animationDelay: '2.7s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent\",\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${!moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 13\n    }\n  }, \"Confirmed\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }\n  }, `${dateStr}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 15\n    }\n  }, formatNumber(datapoint[chartKey1])), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }\n  }, currentStatusCount(chartKey1)))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef1,\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent is-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats is-blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${!moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 13\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }\n  }, `${dateStr}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 15\n    }\n  }, formatNumber(datapoint[chartKey2])), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 15\n    }\n  }, currentStatusCount(chartKey2)))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef2,\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent is-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats is-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${!moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 13\n    }\n  }, \"Recovered\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  }, `${dateStr}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 15\n    }\n  }, formatNumber(datapoint[chartKey3])), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 15\n    }\n  }, currentStatusCount(chartKey3)))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef3,\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent is-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats is-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${!moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 13\n    }\n  }, \"Deceased\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 13\n    }\n  }, `${dateStr}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 15\n    }\n  }, formatNumber(datapoint[chartKey4])), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 15\n    }\n  }, currentStatusCount(chartKey4)))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef4,\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 13\n    }\n  }))), chartType === 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent is-purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats is-purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${!moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 15\n    }\n  }, \"Tested \", props.isTotal ? testedToolTip : ''), /*#__PURE__*/React.createElement(\"h5\", {\n    className: `${moving ? 'title' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 15\n    }\n  }, `${dateStr}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 17\n    }\n  }, formatNumber(datapoint.totaltested)))), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef5,\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pills\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setLastDaysCount(Infinity),\n    className: lastDaysCount === Infinity ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 9\n    }\n  }, \"Beginning\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setLastDaysCount(30),\n    className: lastDaysCount === 30 ? 'selected' : '',\n    \"aria-label\": \"1 month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 9\n    }\n  }, \"1 Month\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setLastDaysCount(14),\n    className: lastDaysCount === 14 ? 'selected' : '',\n    \"aria-label\": \"14 days\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }\n  }, \"2 Weeks\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert is-purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon.AlertOctagon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 9\n    }\n  }, \"Tested chart is independent of uniform scaling\")));\n}\n\nexport default React.memo(TimeSeries);","map":{"version":3,"sources":["/Users/sonalgupta/Documents/research/Weather data/website/covid19india-react/src/components/timeseries.js"],"names":["testedToolTip","sliceTimeseriesFromEnd","formatNumber","useResizeObserver","d3","moment","React","useState","useEffect","useRef","useCallback","Icon","TimeSeries","props","lastDaysCount","setLastDaysCount","window","innerWidth","Infinity","timeseries","setTimeseries","datapoint","setDatapoint","index","setIndex","mode","setMode","logMode","setLogMode","chartType","setChartType","type","moving","setMoving","svgRef1","svgRef2","svgRef3","svgRef4","svgRef5","wrapperRef","dimensions","transformTimeSeries","length","slicedTimeseries","graphData","width","height","margin","top","right","bottom","left","chartRight","chartBottom","T","yBufferTop","yBufferBottom","svg1","select","current","svg2","svg3","svg4","svg5","dateMin","Date","setDate","getDate","dateMax","xScale","scaleTime","clamp","domain","range","numTicksX","xAxis","g","attr","call","axisBottom","ticks","xAxis2","yScale","tickValues","tickSize","style","yAxis","axisRight","tickPadding","plotTotal","dataTypesTotal","dataTypesDaily","colors","svgArray","push","yScales","uniformScaleMin","min","d","Math","totalactive","totalrecovered","totaldeceased","uniformScaleMax","max","totalconfirmed","yScaleUniformLinear","scaleLinear","nice","yScaleUniformLog","scaleLog","map","yScaleLinear","yScaleLog","yScaleDailyUniform","dailyactive","dailyconfirmed","dailyrecovered","dailydeceased","focus","svg","i","selectAll","data","date","join","enter","append","mousemove","xm","mouse","invert","bisectDate","bisector","forEach","f","j","isNaN","mouseout","t","transition","duration","typeTotal","typeDaily","filteredTimeseries","filter","color","remove","path","reverse","n","node","getTotalLength","p","getPointAtLength","x","y","repeat","line","curve","curveMonotoneX","on","focusDate","utcOffset","dateStr","format","chartKey1","chartKey2","chartKey3","chartKey4","currentStatusCount","currentDiff","formatedDiff","animationDelay","isTotal","totaltested","memo"],"mappings":"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","sourcesContent":["import {testedToolTip} from './tooltips';\n\nimport {sliceTimeseriesFromEnd, formatNumber} from '../utils/commonfunctions';\nimport {useResizeObserver} from '../utils/hooks';\n\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\nimport * as Icon from 'react-feather';\n\nfunction TimeSeries(props) {\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(0);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [chartType, setChartType] = useState(props.type);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n  const svgRef5 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const transformTimeSeries = useCallback(\n    (timeseries) => {\n      if (timeseries.length > 1) {\n        const slicedTimeseries = sliceTimeseriesFromEnd(\n          timeseries,\n          lastDaysCount\n        );\n        setIndex(slicedTimeseries.length - 1);\n        setTimeseries(slicedTimeseries);\n      }\n    },\n    [lastDaysCount]\n  );\n\n  useEffect(() => {\n    transformTimeSeries(props.timeseries);\n  }, [lastDaysCount, transformTimeSeries, props.timeseries]);\n\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n\n  useEffect(() => {\n    setChartType(props.type);\n  }, [props.type]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (!dimensions) return;\n      const width = dimensions.width;\n      const height = dimensions.height;\n\n      // Margins\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const T = timeseries.length;\n      const yBufferTop = 1.2;\n      const yBufferBottom = 1.1;\n\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n      const svg4 = d3.select(svgRef4.current);\n      const svg5 = d3.select(svgRef5.current);\n\n      const dateMin = new Date(timeseries[0]['date']);\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(timeseries[T - 1]['date']);\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 7;\n\n      const xAxis = (g) =>\n        g.attr('class', 'x-axis').call(d3.axisBottom(xScale).ticks(numTicksX));\n\n      const xAxis2 = (g, yScale) => {\n        g.attr('class', 'x-axis2')\n          .call(d3.axisBottom(xScale).tickValues([]).tickSize(0))\n          .select('.domain')\n          .style('transform', `translateY(${yScale(0)}px)`);\n\n        if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n        else g.select('.domain').attr('opacity', 0);\n      };\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5));\n\n      // Arrays of objects\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        'totalconfirmed',\n        'totalactive',\n        'totalrecovered',\n        'totaldeceased',\n        'totaltested',\n      ];\n      const dataTypesDaily = [\n        'dailyconfirmed',\n        'dailyactive',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n\n      const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d', '#201aa2'];\n\n      const svgArray = [svg1, svg2, svg3, svg4];\n      if (plotTotal) svgArray.push(svg5);\n\n      let yScales;\n      if (plotTotal) {\n        const uniformScaleMin = d3.min(timeseries, (d) =>\n          Math.min(d.totalactive, d.totalrecovered, d.totaldeceased)\n        );\n        const uniformScaleMax = d3.max(timeseries, (d) => d.totalconfirmed);\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([uniformScaleMin, Math.max(1, yBufferTop * uniformScaleMax)])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(1, yBufferTop * uniformScaleMax),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(timeseries, (d) => d[type]),\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(timeseries, (d) => d[type])\n              ),\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (mode && type !== 'totaltested')\n            return logMode ? yScaleUniformLog : yScaleUniformLinear;\n          else return logMode ? yScaleLog : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            yBufferBottom *\n              Math.min(\n                0,\n                d3.min(timeseries, (d) => d.dailyactive)\n              ),\n            Math.max(\n              1,\n              yBufferTop *\n                d3.max(timeseries, (d) =>\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n                )\n            ),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          if (mode) return yScaleDailyUniform;\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              yBufferBottom *\n                Math.min(\n                  0,\n                  d3.min(timeseries, (d) => d[type])\n                ),\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([timeseries[T - 1]], (d) => d.date)\n          .join((enter) =>\n            enter.append('circle').attr('cx', (d) => xScale(d.date))\n          )\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 4);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(timeseries, date, 1);\n        if (0 <= i && i < T) {\n          if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\n          setDatapoint(timeseries[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = timeseries[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            if (!isNaN(d[type]))\n              f.attr('cx', xScale(d.date))\n                .attr('cy', yScale(d[type]))\n                .attr('opacity', 1);\n            else f.attr('opacity', 0);\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(timeseries[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          if (!isNaN(timeseries[T - 1][type]))\n            f.attr('cx', xScale(timeseries[T - 1].date))\n              .attr('cy', yScale(timeseries[T - 1][type]))\n              .attr('opacity', 1);\n          else f.attr('opacity', 0);\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const filteredTimeseries = timeseries.filter((d) => !isNaN(d[type]));\n        const color = colors[i];\n        const yScale = yScales[i];\n\n        /* X axis */\n        svg\n          .select('.x-axis')\n          .style('transform', `translateY(${chartBottom}px)`)\n          .transition(t)\n          .call(xAxis);\n        svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n        /* Y axis */\n        svg\n          .select('.y-axis')\n          .style('transform', `translateX(${chartRight}px)`)\n          .transition(t)\n          .call(yAxis, yScale);\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(filteredTimeseries, (d) => d.date)\n          .join((enter) =>\n            enter\n              .append('circle')\n              .attr('cx', (d) => xScale(d.date))\n              .attr('cy', chartBottom)\n          )\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 2)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        if (!isNaN(timeseries[T - 1][type]))\n          focus[i]\n            .transition(t)\n            .attr('cx', (d) => xScale(d.date))\n            .attr('cy', (d) => yScale(d[type]))\n            .attr('opacity', 1);\n        else focus[i].transition(t).attr('opacity', 0);\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll('.stem').remove();\n          const path = svg\n            .selectAll('.trend')\n            .data([[...filteredTimeseries].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 4);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr('opacity', plotTotal ? 1 : 0)\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveMonotoneX)\n            );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll('.trend').remove();\n          svg\n            .selectAll('.stem')\n            .data(timeseries, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append('line')\n                .attr('x1', (d) => xScale(d.date))\n                .attr('x2', (d) => xScale(d.date))\n                .attr('y1', chartBottom)\n                .attr('y2', chartBottom)\n            )\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .transition(t)\n            .attr('y1', yScale(0))\n            .attr('x1', (d) => xScale(d.date))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [dimensions, chartType, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const focusDate = moment(datapoint.date).utcOffset('+05:30');\n  const dateStr = focusDate.format('DD MMMM');\n\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\n      return '';\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"TimeSeries fadeInUp\" style={{animationDelay: '2.7s'}}>\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Confirmed</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-blue\">\n          <div className=\"stats is-blue\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Active</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Recovered</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>Deceased</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey4])}</h2>\n              <h6>{currentStatusCount(chartKey4)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef4} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        {chartType === 1 && (\n          <div className=\"svg-parent is-purple\">\n            <div className=\"stats is-purple\">\n              <h5 className={`${!moving ? 'title' : ''}`}>\n                Tested {props.isTotal ? testedToolTip : ''}\n              </h5>\n              <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n              <div className=\"stats-bottom\">\n                <h2>{formatNumber(datapoint.totaltested)}</h2>\n              </div>\n            </div>\n            <svg ref={svgRef5} preserveAspectRatio=\"xMidYMid meet\">\n              <g className=\"x-axis\" />\n              <g className=\"y-axis\" />\n            </svg>\n          </div>\n        )}\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          Beginning\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label=\"1 month\"\n        >\n          1 Month\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label=\"14 days\"\n        >\n          2 Weeks\n        </button>\n      </div>\n\n      <div className=\"alert is-purple\">\n        <Icon.AlertOctagon />\n        <div className=\"alert-right\">\n          Tested chart is independent of uniform scaling\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(TimeSeries);\n"]},"metadata":{},"sourceType":"module"}