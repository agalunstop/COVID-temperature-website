{"ast":null,"code":"var _jsxFileName = \"/Users/sonalgupta/Documents/research/Weather data/website/covid19india-react/src/components/state.js\";\nimport Clusters from './clusters';\nimport DeltaBarGraph from './deltabargraph';\nimport Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport TimeSeriesExplorer from './timeseriesexplorer';\nimport { MAP_META, STATE_CODES } from '../constants';\nimport { formatDateAbsolute, formatNumber, mergeTimeseries, parseStateTimeseries, parseStateTestTimeseries } from '../utils/commonfunctions';\nimport { Breadcrumb, Dropdown } from '@primer/components';\nimport anime from 'animejs';\nimport axios from 'axios';\nimport { format, parse } from 'date-fns';\nimport React, { useRef, useState } from 'react';\nimport * as Icon from 'react-feather';\nimport { Link, useParams, Redirect } from 'react-router-dom';\nimport { useMeasure, useEffectOnce } from 'react-use';\n\nfunction State(props) {\n  const mapRef = useRef();\n  const stateCode = useParams().stateCode.toUpperCase();\n  const [allStateData, setAllStateData] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState({});\n  const [stateData, setStateData] = useState({});\n  const [testData, setTestData] = useState({});\n  const [sources, setSources] = useState({});\n  const [districtData, setDistrictData] = useState({});\n  const [stateName] = useState(STATE_CODES[stateCode]);\n  const [mapOption, setMapOption] = useState('confirmed');\n  const [mapSwitcher, {\n    width\n  }] = useMeasure();\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n  useEffectOnce(() => {\n    getState(stateCode);\n  });\n\n  const getState = async code => {\n    try {\n      const [{\n        data: dataResponse\n      }, {\n        data: stateDistrictWiseResponse\n      }, {\n        data: statesDailyResponse\n      }, {\n        data: stateTestResponse\n      }, {\n        data: sourcesResponse\n      }] = await Promise.all([axios.get('https://api.covid19india.org/data.json'), axios.get('https://api.covid19india.org/state_district_wise.json'), axios.get('https://api.covid19india.org/states_daily.json'), axios.get('https://api.covid19india.org/state_test_data.json'), axios.get('https://api.covid19india.org/sources_list.json')]);\n      const name = STATE_CODES[code];\n      const states = dataResponse.statewise;\n      setAllStateData(states.filter(state => state.statecode !== code && STATE_CODES[state.statecode]));\n      setStateData(states.find(s => s.statecode === code)); // Timeseries\n\n      const ts = parseStateTimeseries(statesDailyResponse)[code];\n      const testTs = parseStateTestTimeseries(stateTestResponse.states_tested_data)[code]; // Merge\n\n      const tsMerged = mergeTimeseries({\n        [code]: ts\n      }, {\n        [code]: testTs\n      });\n      setTimeseries(tsMerged[code]); // District data\n\n      setDistrictData({\n        [name]: stateDistrictWiseResponse[name]\n      });\n      const sourceList = sourcesResponse.sources_list;\n      setSources(sourceList.filter(state => state.statecode === code));\n      const statesTests = stateTestResponse.states_tested_data;\n      setTestData(statesTests.filter(obj => obj.state === name && obj.totaltested !== ''));\n      setFetched(true);\n      anime({\n        targets: '.highlight',\n        duration: 200,\n        delay: 3000,\n        translateX: mapOption === 'confirmed' ? `${width * 0}px` : mapOption === 'active' ? `${width * 0.25}px` : mapOption === 'recovered' ? `${width * 0.5}px` : mapOption === 'deceased' ? `${width * 0.75}px` : '0px',\n        easing: 'spring(1, 80, 90, 10)',\n        opacity: 1\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const testObjLast = testData[testData.length - 1];\n\n  function toggleShowAllDistricts() {\n    setShowAllDistricts(!showAllDistricts);\n  }\n\n  const getGridRowCount = () => {\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount = districtData[stateName] && Object.keys(districtData[stateName].districtData).length || 0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  };\n\n  const gridRowCount = getGridRowCount();\n\n  if (!stateName) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }\n    });\n  } else {\n    var _districtData$stateNa, _districtData$stateNa2;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"State\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"state-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, \"Home\"), /*#__PURE__*/React.createElement(Dropdown, {\n      direction: \"w\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"summary\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n      href: `${stateCode}`,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, stateName), /*#__PURE__*/React.createElement(Dropdown.Caret, {\n      className: \"caret\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    })), fetched && /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      direction: \"se\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, allStateData.map(state => /*#__PURE__*/React.createElement(Dropdown.Item, {\n      key: state.statecode,\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `${state.statecode}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 27\n      }\n    }, STATE_CODES[state.statecode]))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-left fadeInUp\",\n      style: {\n        animationDelay: '0.3s'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, stateName), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, \"Last Updated on\", ' ', Object.keys(stateData).length ? formatDateAbsolute(stateData.lastupdatedtime) : '')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right fadeInUp\",\n      style: {\n        animationDelay: '0.5s'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, \"Tested\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, formatNumber(testObjLast === null || testObjLast === void 0 ? void 0 : testObjLast.totaltested)), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, !isNaN(parse(testObjLast === null || testObjLast === void 0 ? void 0 : testObjLast.updatedon, 'dd/MM/yyyy', new Date())) ? `As of ${format(parse(testObjLast === null || testObjLast === void 0 ? void 0 : testObjLast.updatedon, 'dd/MM/yyyy', new Date()), 'dd MMM')}` : ''), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, 'per ', (testObjLast === null || testObjLast === void 0 ? void 0 : testObjLast.totaltested) && /*#__PURE__*/React.createElement(\"a\", {\n      href: testObjLast.source,\n      target: \"_noblank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, \"source\")))), fetched && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-switcher\",\n      ref: mapSwitcher,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `highlight ${mapOption}`,\n      style: {\n        transform: `translateX(${width * 0}px)`,\n        opacity: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clickable\",\n      onClick: () => {\n        setMapOption('confirmed');\n        anime({\n          targets: '.highlight',\n          translateX: `${width * 0}px`,\n          easing: 'spring(1, 80, 90, 10)'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clickable\",\n      onClick: () => {\n        setMapOption('active');\n        anime({\n          targets: '.highlight',\n          translateX: `${width * 0.25}px`,\n          easing: 'spring(1, 80, 90, 10)'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clickable\",\n      onClick: () => {\n        setMapOption('recovered');\n        anime({\n          targets: '.highlight',\n          translateX: `${width * 0.5}px`,\n          easing: 'spring(1, 80, 90, 10)'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clickable\",\n      onClick: () => {\n        setMapOption('deceased');\n        anime({\n          targets: '.highlight',\n          translateX: `${width * 0.75}px`,\n          easing: 'spring(1, 80, 90, 10)'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    })), fetched && /*#__PURE__*/React.createElement(Level, {\n      data: stateData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }\n    }), fetched && /*#__PURE__*/React.createElement(Minigraph, {\n      timeseries: timeseries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }), fetched && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MapExplorer, {\n      forwardRef: mapRef,\n      mapMeta: MAP_META[stateName],\n      states: [stateData],\n      stateDistrictWiseData: districtData,\n      stateTestData: testData,\n      isCountryLoaded: false,\n      mapOptionProp: mapOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    })), fetched && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meta-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon.AlertCircle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 19\n      }\n    }, \"Awaiting district details for\", ' ', ((_districtData$stateNa = districtData[stateName]) === null || _districtData$stateNa === void 0 ? void 0 : (_districtData$stateNa2 = _districtData$stateNa.districtData['Unknown']) === null || _districtData$stateNa2 === void 0 ? void 0 : _districtData$stateNa2.confirmed) || '0', ' ', \"cases\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon.Compass, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    }, \"Data collected from sources\", ' ', sources.length > 0 ? Object.keys(sources[0]).map((key, index) => {\n      if (key.match('source') && sources[0][key] !== '') {\n        const num = key.match(/\\d+/);\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 31\n          }\n        }, num > 1 ? ',' : '', /*#__PURE__*/React.createElement(\"a\", {\n          href: sources[0][key],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 33\n          }\n        }, num));\n      }\n\n      return null;\n    }) : '')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"state-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    }, fetched && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"district-bar\",\n      style: !showAllDistricts ? {\n        display: 'flex'\n      } : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"district-bar-left fadeInUp\",\n      style: {\n        animationDelay: '0.6s'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }\n    }, \"Top districts\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: `districts ${showAllDistricts ? 'is-grid' : ''}`,\n      style: showAllDistricts ? {\n        gridTemplateRows: `repeat(${gridRowCount}, 2rem)`\n      } : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }\n    }, districtData[stateName] ? Object.keys(districtData[stateName].districtData).filter(d => d !== 'Unknown').sort((a, b) => districtData[stateName].districtData[b].confirmed - districtData[stateName].districtData[a].confirmed).slice(0, showAllDistricts ? undefined : 5).map((district, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"district\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 35\n        }\n      }, districtData[stateName].districtData[district].confirmed), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 35\n        }\n      }, district), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"delta\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Icon.ArrowUp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 37\n        }\n      }, districtData[stateName].districtData[district].delta.confirmed)));\n    }) : ''), districtData[stateName] && Object.keys(districtData[stateName].districtData).length > 5 && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: toggleShowAllDistricts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 25\n      }\n    }, showAllDistricts ? `View less` : `View all`)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"district-bar-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"happy-sign fadeInUp\",\n      style: {\n        animationDelay: '0.6s'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 21\n      }\n    }, timeseries.slice(-5).every(day => day.dailyconfirmed === 0) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert is-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon.Smile, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 27\n      }\n    }, \"No new confirmed cases in the past five days\"))), /*#__PURE__*/React.createElement(DeltaBarGraph, {\n      timeseries: timeseries.slice(-5),\n      arrayKey: 'dailyconfirmed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 23\n      }\n    }))), false && /*#__PURE__*/React.createElement(Link, {\n      to: \"/essentials\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"to-essentials fadeInUp\",\n      style: {\n        animationDelay: '0.9s'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 23\n      }\n    }, \"Go to essentials\"), /*#__PURE__*/React.createElement(Icon.ArrowRightCircle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(TimeSeriesExplorer, {\n      timeseries: timeseries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"state-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Clusters fadeInUp\",\n      style: {\n        animationDelay: '0.8s'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 15\n      }\n    }, \"Network of Transmission\"), /*#__PURE__*/React.createElement(Clusters, {\n      stateCode: stateCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"state-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nexport default React.memo(State);","map":{"version":3,"sources":["/Users/sonalgupta/Documents/research/Weather data/website/covid19india-react/src/components/state.js"],"names":["Clusters","DeltaBarGraph","Footer","Level","MapExplorer","Minigraph","TimeSeriesExplorer","MAP_META","STATE_CODES","formatDateAbsolute","formatNumber","mergeTimeseries","parseStateTimeseries","parseStateTestTimeseries","Breadcrumb","Dropdown","anime","axios","format","parse","React","useRef","useState","Icon","Link","useParams","Redirect","useMeasure","useEffectOnce","State","props","mapRef","stateCode","toUpperCase","allStateData","setAllStateData","fetched","setFetched","timeseries","setTimeseries","stateData","setStateData","testData","setTestData","sources","setSources","districtData","setDistrictData","stateName","mapOption","setMapOption","mapSwitcher","width","showAllDistricts","setShowAllDistricts","getState","code","data","dataResponse","stateDistrictWiseResponse","statesDailyResponse","stateTestResponse","sourcesResponse","Promise","all","get","name","states","statewise","filter","state","statecode","find","s","ts","testTs","states_tested_data","tsMerged","sourceList","sources_list","statesTests","obj","totaltested","targets","duration","delay","translateX","easing","opacity","err","console","log","testObjLast","length","toggleShowAllDistricts","getGridRowCount","gridColumnCount","window","innerWidth","districtCount","Object","keys","gridRowCount","Math","ceil","map","animationDelay","lastupdatedtime","isNaN","updatedon","Date","source","transform","confirmed","key","index","match","num","display","gridTemplateRows","d","sort","a","b","slice","undefined","district","delta","every","day","dailyconfirmed","memo"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,cAApC;AACA,SACEC,kBADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,oBAJF,EAKEC,wBALF,QAMO,0BANP;AAQA,SAAQC,UAAR,EAAoBC,QAApB,QAAmC,oBAAnC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,UAA5B;AACA,OAAOC,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AACA,SAAQC,IAAR,EAAcC,SAAd,EAAyBC,QAAzB,QAAwC,kBAAxC;AACA,SAAQC,UAAR,EAAoBC,aAApB,QAAwC,WAAxC;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAMC,MAAM,GAAGV,MAAM,EAArB;AAEA,QAAMW,SAAS,GAAGP,SAAS,GAAGO,SAAZ,CAAsBC,WAAtB,EAAlB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC0B,SAAD,IAAc1B,QAAQ,CAACd,WAAW,CAACwB,SAAD,CAAZ,CAA5B;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,WAAD,CAA1C;AACA,QAAM,CAAC6B,WAAD,EAAc;AAACC,IAAAA;AAAD,GAAd,IAAyBzB,UAAU,EAAzC;AACA,QAAM,CAAC0B,gBAAD,EAAmBC,mBAAnB,IAA0ChC,QAAQ,CAAC,KAAD,CAAxD;AAEAM,EAAAA,aAAa,CAAC,MAAM;AAClB2B,IAAAA,QAAQ,CAACvB,SAAD,CAAR;AACD,GAFY,CAAb;;AAIA,QAAMuB,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B,QAAI;AACF,YAAM,CACJ;AAACC,QAAAA,IAAI,EAAEC;AAAP,OADI,EAEJ;AAACD,QAAAA,IAAI,EAAEE;AAAP,OAFI,EAGJ;AAACF,QAAAA,IAAI,EAAEG;AAAP,OAHI,EAIJ;AAACH,QAAAA,IAAI,EAAEI;AAAP,OAJI,EAKJ;AAACJ,QAAAA,IAAI,EAAEK;AAAP,OALI,IAMF,MAAMC,OAAO,CAACC,GAAR,CAAY,CACpB/C,KAAK,CAACgD,GAAN,CAAU,wCAAV,CADoB,EAEpBhD,KAAK,CAACgD,GAAN,CAAU,uDAAV,CAFoB,EAGpBhD,KAAK,CAACgD,GAAN,CAAU,gDAAV,CAHoB,EAIpBhD,KAAK,CAACgD,GAAN,CAAU,mDAAV,CAJoB,EAKpBhD,KAAK,CAACgD,GAAN,CAAU,gDAAV,CALoB,CAAZ,CANV;AAaA,YAAMC,IAAI,GAAG1D,WAAW,CAACgD,IAAD,CAAxB;AAEA,YAAMW,MAAM,GAAGT,YAAY,CAACU,SAA5B;AACAjC,MAAAA,eAAe,CACbgC,MAAM,CAACE,MAAP,CACGC,KAAD,IAAWA,KAAK,CAACC,SAAN,KAAoBf,IAApB,IAA4BhD,WAAW,CAAC8D,KAAK,CAACC,SAAP,CADpD,CADa,CAAf;AAKA9B,MAAAA,YAAY,CAAC0B,MAAM,CAACK,IAAP,CAAaC,CAAD,IAAOA,CAAC,CAACF,SAAF,KAAgBf,IAAnC,CAAD,CAAZ,CAtBE,CAuBF;;AACA,YAAMkB,EAAE,GAAG9D,oBAAoB,CAACgD,mBAAD,CAApB,CAA0CJ,IAA1C,CAAX;AACA,YAAMmB,MAAM,GAAG9D,wBAAwB,CACrCgD,iBAAiB,CAACe,kBADmB,CAAxB,CAEbpB,IAFa,CAAf,CAzBE,CA4BF;;AACA,YAAMqB,QAAQ,GAAGlE,eAAe,CAAC;AAAC,SAAC6C,IAAD,GAAQkB;AAAT,OAAD,EAAe;AAAC,SAAClB,IAAD,GAAQmB;AAAT,OAAf,CAAhC;AACApC,MAAAA,aAAa,CAACsC,QAAQ,CAACrB,IAAD,CAAT,CAAb,CA9BE,CA+BF;;AACAT,MAAAA,eAAe,CAAC;AACd,SAACmB,IAAD,GAAQP,yBAAyB,CAACO,IAAD;AADnB,OAAD,CAAf;AAGA,YAAMY,UAAU,GAAGhB,eAAe,CAACiB,YAAnC;AACAlC,MAAAA,UAAU,CAACiC,UAAU,CAACT,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACC,SAAN,KAAoBf,IAAjD,CAAD,CAAV;AAEA,YAAMwB,WAAW,GAAGnB,iBAAiB,CAACe,kBAAtC;AACAjC,MAAAA,WAAW,CACTqC,WAAW,CAACX,MAAZ,CACGY,GAAD,IAASA,GAAG,CAACX,KAAJ,KAAcJ,IAAd,IAAsBe,GAAG,CAACC,WAAJ,KAAoB,EADrD,CADS,CAAX;AAKA7C,MAAAA,UAAU,CAAC,IAAD,CAAV;AACArB,MAAAA,KAAK,CAAC;AACJmE,QAAAA,OAAO,EAAE,YADL;AAEJC,QAAAA,QAAQ,EAAE,GAFN;AAGJC,QAAAA,KAAK,EAAE,IAHH;AAIJC,QAAAA,UAAU,EACRrC,SAAS,KAAK,WAAd,GACK,GAAEG,KAAK,GAAG,CAAE,IADjB,GAEIH,SAAS,KAAK,QAAd,GACC,GAAEG,KAAK,GAAG,IAAK,IADhB,GAEAH,SAAS,KAAK,WAAd,GACC,GAAEG,KAAK,GAAG,GAAI,IADf,GAEAH,SAAS,KAAK,UAAd,GACC,GAAEG,KAAK,GAAG,IAAK,IADhB,GAEA,KAbF;AAcJmC,QAAAA,MAAM,EAAE,uBAdJ;AAeJC,QAAAA,OAAO,EAAE;AAfL,OAAD,CAAL;AAiBD,KA9DD,CA8DE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAlED;;AAoEA,QAAMG,WAAW,GAAGlD,QAAQ,CAACA,QAAQ,CAACmD,MAAT,GAAkB,CAAnB,CAA5B;;AAEA,WAASC,sBAAT,GAAkC;AAChCxC,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACD;;AAED,QAAM0C,eAAe,GAAG,MAAM;AAC5B,UAAMC,eAAe,GAAGC,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2B,CAA3B,GAA+B,CAAvD;AACA,UAAMC,aAAa,GAChBrD,YAAY,CAACE,SAAD,CAAZ,IACCoD,MAAM,CAACC,IAAP,CAAYvD,YAAY,CAACE,SAAD,CAAZ,CAAwBF,YAApC,EAAkD+C,MADpD,IAEA,CAHF;AAIA,UAAMS,YAAY,GAAGC,IAAI,CAACC,IAAL,CAAUL,aAAa,GAAGH,eAA1B,CAArB;AACA,WAAOM,YAAP;AACD,GARD;;AASA,QAAMA,YAAY,GAAGP,eAAe,EAApC;;AACA,MAAI,CAAC/C,SAAL,EAAgB;AACd,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AAAA;;AACL,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,IAAI,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,IAAI,EAAG,GAAEhB,SAAU,EAApC;AAAuC,MAAA,QAAQ,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGgB,SADH,CADF,eAIE,oBAAC,QAAD,CAAU,KAAV;AAAgB,MAAA,SAAS,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,EAOGZ,OAAO,iBACN,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,SAAS,EAAC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,YAAY,CAACuE,GAAb,CAAkBnC,KAAD,iBAChB,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,GAAG,EAAEA,KAAK,CAACC,SAA1B;AAAqC,MAAA,SAAS,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAED,KAAK,CAACC,SAAU,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG/D,WAAW,CAAC8D,KAAK,CAACC,SAAP,CADd,CADF,CADD,CADH,CARJ,CAFF,CADF,CADF,eA0BE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,sBADZ;AAEE,MAAA,KAAK,EAAE;AAACmC,QAAAA,cAAc,EAAE;AAAjB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK1D,SAAL,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkB,GADlB,EAEGoD,MAAM,CAACC,IAAP,CAAY7D,SAAZ,EAAuBqD,MAAvB,GACGpF,kBAAkB,CAAC+B,SAAS,CAACmE,eAAX,CADrB,GAEG,EAJN,CALF,CADF,eAcE;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,KAAK,EAAE;AAACD,QAAAA,cAAc,EAAE;AAAjB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKhG,YAAY,CAACkF,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEV,WAAd,CAAjB,CALF,eAME;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC0B,KAAK,CACLzF,KAAK,CAACyE,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEiB,SAAd,EAAyB,YAAzB,EAAuC,IAAIC,IAAJ,EAAvC,CADA,CAAN,GAGI,SAAQ5F,MAAM,CACbC,KAAK,CAACyE,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEiB,SAAd,EAAyB,YAAzB,EAAuC,IAAIC,IAAJ,EAAvC,CADQ,EAEb,QAFa,CAGb,EANL,GAOG,EARN,CANF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,MADH,EAEG,CAAAlB,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEV,WAAb,kBACC;AAAG,MAAA,IAAI,EAAEU,WAAW,CAACmB,MAArB;AAA6B,MAAA,MAAM,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAhBF,CAdF,CA1BF,EAmEG3E,OAAO,iBACN;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAEe,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAG,aAAYF,SAAU,EADpC;AAEE,MAAA,KAAK,EAAE;AACL+D,QAAAA,SAAS,EAAG,cAAa5D,KAAK,GAAG,CAAE,KAD9B;AAELoC,QAAAA,OAAO,EAAE;AAFJ,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbtC,QAAAA,YAAY,CAAC,WAAD,CAAZ;AACAlC,QAAAA,KAAK,CAAC;AACJmE,UAAAA,OAAO,EAAE,YADL;AAEJG,UAAAA,UAAU,EAAG,GAAElC,KAAK,GAAG,CAAE,IAFrB;AAGJmC,UAAAA,MAAM,EAAE;AAHJ,SAAD,CAAL;AAKD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eAmBE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbrC,QAAAA,YAAY,CAAC,QAAD,CAAZ;AACAlC,QAAAA,KAAK,CAAC;AACJmE,UAAAA,OAAO,EAAE,YADL;AAEJG,UAAAA,UAAU,EAAG,GAAElC,KAAK,GAAG,IAAK,IAFxB;AAGJmC,UAAAA,MAAM,EAAE;AAHJ,SAAD,CAAL;AAKD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,eA8BE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbrC,QAAAA,YAAY,CAAC,WAAD,CAAZ;AACAlC,QAAAA,KAAK,CAAC;AACJmE,UAAAA,OAAO,EAAE,YADL;AAEJG,UAAAA,UAAU,EAAG,GAAElC,KAAK,GAAG,GAAI,IAFvB;AAGJmC,UAAAA,MAAM,EAAE;AAHJ,SAAD,CAAL;AAKD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,eAyCE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbrC,QAAAA,YAAY,CAAC,UAAD,CAAZ;AACAlC,QAAAA,KAAK,CAAC;AACJmE,UAAAA,OAAO,EAAE,YADL;AAEJG,UAAAA,UAAU,EAAG,GAAElC,KAAK,GAAG,IAAK,IAFxB;AAGJmC,UAAAA,MAAM,EAAE;AAHJ,SAAD,CAAL;AAKD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,CApEJ,EA2HGnD,OAAO,iBAAI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEI,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3Hd,EA4HGJ,OAAO,iBAAI,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAEE,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5Hd,EA6HGF,OAAO,iBACN,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,WAAD;AACE,MAAA,UAAU,EAAEL,MADd;AAEE,MAAA,OAAO,EAAExB,QAAQ,CAACyC,SAAD,CAFnB;AAGE,MAAA,MAAM,EAAE,CAACR,SAAD,CAHV;AAIE,MAAA,qBAAqB,EAAEM,YAJzB;AAKE,MAAA,aAAa,EAAEJ,QALjB;AAME,MAAA,eAAe,EAAE,KANnB;AAOE,MAAA,aAAa,EAAEO,SAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA9HJ,EA6IGb,OAAO,iBACN;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACgC,GADhC,EAEG,0BAAAU,YAAY,CAACE,SAAD,CAAZ,0GAAyBF,YAAzB,CAAsC,SAAtC,mFACGmE,SADH,KACgB,GAHnB,EAGwB,GAHxB,UAFF,CADF,eAUE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAC8B,GAD9B,EAEGrE,OAAO,CAACiD,MAAR,GAAiB,CAAjB,GACGO,MAAM,CAACC,IAAP,CAAYzD,OAAO,CAAC,CAAD,CAAnB,EAAwB6D,GAAxB,CAA4B,CAACS,GAAD,EAAMC,KAAN,KAAgB;AAC1C,UAAID,GAAG,CAACE,KAAJ,CAAU,QAAV,KAAuBxE,OAAO,CAAC,CAAD,CAAP,CAAWsE,GAAX,MAAoB,EAA/C,EAAmD;AACjD,cAAMG,GAAG,GAAGH,GAAG,CAACE,KAAJ,CAAU,KAAV,CAAZ;AACA,4BACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,GAAG,EAAED,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGE,GAAG,GAAG,CAAN,GAAU,GAAV,GAAgB,EADnB,eAEE;AAAG,UAAA,IAAI,EAAEzE,OAAO,CAAC,CAAD,CAAP,CAAWsE,GAAX,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BG,GAA3B,CAFF,CADF;AAMD;;AACD,aAAO,IAAP;AACD,KAXD,CADH,GAaG,EAfN,CAFF,CAVF,CA9IJ,CADF,eAiLE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjF,OAAO,iBACN,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,KAAK,EAAE,CAACiB,gBAAD,GAAoB;AAACiE,QAAAA,OAAO,EAAE;AAAV,OAApB,GAAwC,EAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AACE,MAAA,SAAS,EAAC,4BADZ;AAEE,MAAA,KAAK,EAAE;AAACZ,QAAAA,cAAc,EAAE;AAAjB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,eAKE;AACE,MAAA,SAAS,EAAG,aACVrD,gBAAgB,GAAG,SAAH,GAAe,EAChC,EAHH;AAIE,MAAA,KAAK,EACHA,gBAAgB,GACZ;AAACkE,QAAAA,gBAAgB,EAAG,UAASjB,YAAa;AAA1C,OADY,GAEZ,EAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUGxD,YAAY,CAACE,SAAD,CAAZ,GACGoD,MAAM,CAACC,IAAP,CAAYvD,YAAY,CAACE,SAAD,CAAZ,CAAwBF,YAApC,EACGuB,MADH,CACWmD,CAAD,IAAOA,CAAC,KAAK,SADvB,EAEGC,IAFH,CAGI,CAACC,CAAD,EAAIC,CAAJ,KACE7E,YAAY,CAACE,SAAD,CAAZ,CAAwBF,YAAxB,CAAqC6E,CAArC,EACGV,SADH,GAEAnE,YAAY,CAACE,SAAD,CAAZ,CAAwBF,YAAxB,CAAqC4E,CAArC,EACGT,SAPT,EASGW,KATH,CASS,CATT,EASYvE,gBAAgB,GAAGwE,SAAH,GAAe,CAT3C,EAUGpB,GAVH,CAUO,CAACqB,QAAD,EAAWX,KAAX,KAAqB;AACxB,0BACE;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAiB,QAAA,SAAS,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIrE,YAAY,CAACE,SAAD,CAAZ,CAAwBF,YAAxB,CACEgF,QADF,EAEEb,SAJN,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKa,QAAL,CARF,eASE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIhF,YAAY,CAACE,SAAD,CAAZ,CAAwBF,YAAxB,CACEgF,QADF,EAEEC,KAFF,CAEQd,SAJZ,CAFF,CATF,CADF;AAsBD,KAjCH,CADH,GAmCG,EA7CN,CALF,EAoDGnE,YAAY,CAACE,SAAD,CAAZ,IACCoD,MAAM,CAACC,IAAP,CAAYvD,YAAY,CAACE,SAAD,CAAZ,CAAwBF,YAApC,EAAkD+C,MAAlD,GACE,CAFH,iBAGG;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,OAAO,EAAEC,sBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGzC,gBAAgB,GAAI,WAAJ,GAAkB,UAJrC,CAvDN,CAJF,eAmEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,KAAK,EAAE;AAACqD,QAAAA,cAAc,EAAE;AAAjB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGpE,UAAU,CACRsF,KADF,CACQ,CAAC,CADT,EAEEI,KAFF,CAESC,GAAD,IAASA,GAAG,CAACC,cAAJ,KAAuB,CAFxC,kBAGC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFF,CAPJ,CADF,eAiBI,oBAAC,aAAD;AACE,MAAA,UAAU,EAAE5F,UAAU,CAACsF,KAAX,CAAiB,CAAC,CAAlB,CADd;AAEE,MAAA,QAAQ,EAAE,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CAnEF,CADF,EA6FG,sBACC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,KAAK,EAAE;AAAClB,QAAAA,cAAc,EAAE;AAAjB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE,oBAAC,IAAD,CAAM,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CA9FJ,eAyGE,oBAAC,kBAAD;AAAoB,MAAA,UAAU,EAAEpE,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzGF,CAFJ,CAjLF,eAiSE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,KAAK,EAAE;AAACoE,QAAAA,cAAc,EAAE;AAAjB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAE1E,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAjSF,eAwSE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxSF,CADF,eA2SE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3SF,CADF;AA+SD;AACF;;AAED,eAAeZ,KAAK,CAAC+G,IAAN,CAAWtG,KAAX,CAAf","sourcesContent":["import Clusters from './clusters';\nimport DeltaBarGraph from './deltabargraph';\nimport Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport TimeSeriesExplorer from './timeseriesexplorer';\n\nimport {MAP_META, STATE_CODES} from '../constants';\nimport {\n  formatDateAbsolute,\n  formatNumber,\n  mergeTimeseries,\n  parseStateTimeseries,\n  parseStateTestTimeseries,\n} from '../utils/commonfunctions';\n\nimport {Breadcrumb, Dropdown} from '@primer/components';\nimport anime from 'animejs';\nimport axios from 'axios';\nimport {format, parse} from 'date-fns';\nimport React, {useRef, useState} from 'react';\nimport * as Icon from 'react-feather';\nimport {Link, useParams, Redirect} from 'react-router-dom';\nimport {useMeasure, useEffectOnce} from 'react-use';\n\nfunction State(props) {\n  const mapRef = useRef();\n\n  const stateCode = useParams().stateCode.toUpperCase();\n  const [allStateData, setAllStateData] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState({});\n  const [stateData, setStateData] = useState({});\n  const [testData, setTestData] = useState({});\n  const [sources, setSources] = useState({});\n  const [districtData, setDistrictData] = useState({});\n  const [stateName] = useState(STATE_CODES[stateCode]);\n  const [mapOption, setMapOption] = useState('confirmed');\n  const [mapSwitcher, {width}] = useMeasure();\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n\n  useEffectOnce(() => {\n    getState(stateCode);\n  });\n\n  const getState = async (code) => {\n    try {\n      const [\n        {data: dataResponse},\n        {data: stateDistrictWiseResponse},\n        {data: statesDailyResponse},\n        {data: stateTestResponse},\n        {data: sourcesResponse},\n      ] = await Promise.all([\n        axios.get('https://api.covid19india.org/data.json'),\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\n        axios.get('https://api.covid19india.org/states_daily.json'),\n        axios.get('https://api.covid19india.org/state_test_data.json'),\n        axios.get('https://api.covid19india.org/sources_list.json'),\n      ]);\n      const name = STATE_CODES[code];\n\n      const states = dataResponse.statewise;\n      setAllStateData(\n        states.filter(\n          (state) => state.statecode !== code && STATE_CODES[state.statecode]\n        )\n      );\n      setStateData(states.find((s) => s.statecode === code));\n      // Timeseries\n      const ts = parseStateTimeseries(statesDailyResponse)[code];\n      const testTs = parseStateTestTimeseries(\n        stateTestResponse.states_tested_data\n      )[code];\n      // Merge\n      const tsMerged = mergeTimeseries({[code]: ts}, {[code]: testTs});\n      setTimeseries(tsMerged[code]);\n      // District data\n      setDistrictData({\n        [name]: stateDistrictWiseResponse[name],\n      });\n      const sourceList = sourcesResponse.sources_list;\n      setSources(sourceList.filter((state) => state.statecode === code));\n\n      const statesTests = stateTestResponse.states_tested_data;\n      setTestData(\n        statesTests.filter(\n          (obj) => obj.state === name && obj.totaltested !== ''\n        )\n      );\n      setFetched(true);\n      anime({\n        targets: '.highlight',\n        duration: 200,\n        delay: 3000,\n        translateX:\n          mapOption === 'confirmed'\n            ? `${width * 0}px`\n            : mapOption === 'active'\n            ? `${width * 0.25}px`\n            : mapOption === 'recovered'\n            ? `${width * 0.5}px`\n            : mapOption === 'deceased'\n            ? `${width * 0.75}px`\n            : '0px',\n        easing: 'spring(1, 80, 90, 10)',\n        opacity: 1,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const testObjLast = testData[testData.length - 1];\n\n  function toggleShowAllDistricts() {\n    setShowAllDistricts(!showAllDistricts);\n  }\n\n  const getGridRowCount = () => {\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount =\n      (districtData[stateName] &&\n        Object.keys(districtData[stateName].districtData).length) ||\n      0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  };\n  const gridRowCount = getGridRowCount();\n  if (!stateName) {\n    return <Redirect to=\"/\" />;\n  } else {\n    return (\n      <React.Fragment>\n        <div className=\"State\">\n          <div className=\"state-left\">\n            <div className=\"breadcrumb\">\n              <Breadcrumb>\n                <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n                <Dropdown direction=\"w\">\n                  <summary>\n                    <Breadcrumb.Item href={`${stateCode}`} selected>\n                      {stateName}\n                    </Breadcrumb.Item>\n                    <Dropdown.Caret className=\"caret\" />\n                  </summary>\n                  {fetched && (\n                    <Dropdown.Menu direction=\"se\">\n                      {allStateData.map((state) => (\n                        <Dropdown.Item key={state.statecode} className=\"item\">\n                          <Link to={`${state.statecode}`}>\n                            {STATE_CODES[state.statecode]}\n                          </Link>\n                        </Dropdown.Item>\n                      ))}\n                    </Dropdown.Menu>\n                  )}\n                </Dropdown>\n              </Breadcrumb>\n            </div>\n\n            <div className=\"header\">\n              <div\n                className=\"header-left fadeInUp\"\n                style={{animationDelay: '0.3s'}}\n              >\n                <h1>{stateName}</h1>\n                <h5>\n                  Last Updated on{' '}\n                  {Object.keys(stateData).length\n                    ? formatDateAbsolute(stateData.lastupdatedtime)\n                    : ''}\n                </h5>\n              </div>\n\n              <div\n                className=\"header-right fadeInUp\"\n                style={{animationDelay: '0.5s'}}\n              >\n                <h5>Tested</h5>\n                <h2>{formatNumber(testObjLast?.totaltested)}</h2>\n                <h5 className=\"timestamp\">\n                  {!isNaN(\n                    parse(testObjLast?.updatedon, 'dd/MM/yyyy', new Date())\n                  )\n                    ? `As of ${format(\n                        parse(testObjLast?.updatedon, 'dd/MM/yyyy', new Date()),\n                        'dd MMM'\n                      )}`\n                    : ''}\n                </h5>\n                <h5>\n                  {'per '}\n                  {testObjLast?.totaltested && (\n                    <a href={testObjLast.source} target=\"_noblank\">\n                      source\n                    </a>\n                  )}\n                </h5>\n              </div>\n            </div>\n\n            {fetched && (\n              <div className=\"map-switcher\" ref={mapSwitcher}>\n                <div\n                  className={`highlight ${mapOption}`}\n                  style={{\n                    transform: `translateX(${width * 0}px)`,\n                    opacity: 0,\n                  }}\n                ></div>\n                <div\n                  className=\"clickable\"\n                  onClick={() => {\n                    setMapOption('confirmed');\n                    anime({\n                      targets: '.highlight',\n                      translateX: `${width * 0}px`,\n                      easing: 'spring(1, 80, 90, 10)',\n                    });\n                  }}\n                ></div>\n                <div\n                  className=\"clickable\"\n                  onClick={() => {\n                    setMapOption('active');\n                    anime({\n                      targets: '.highlight',\n                      translateX: `${width * 0.25}px`,\n                      easing: 'spring(1, 80, 90, 10)',\n                    });\n                  }}\n                ></div>\n                <div\n                  className=\"clickable\"\n                  onClick={() => {\n                    setMapOption('recovered');\n                    anime({\n                      targets: '.highlight',\n                      translateX: `${width * 0.5}px`,\n                      easing: 'spring(1, 80, 90, 10)',\n                    });\n                  }}\n                ></div>\n                <div\n                  className=\"clickable\"\n                  onClick={() => {\n                    setMapOption('deceased');\n                    anime({\n                      targets: '.highlight',\n                      translateX: `${width * 0.75}px`,\n                      easing: 'spring(1, 80, 90, 10)',\n                    });\n                  }}\n                ></div>\n              </div>\n            )}\n\n            {fetched && <Level data={stateData} />}\n            {fetched && <Minigraph timeseries={timeseries} />}\n            {fetched && (\n              <React.Fragment>\n                {\n                  <MapExplorer\n                    forwardRef={mapRef}\n                    mapMeta={MAP_META[stateName]}\n                    states={[stateData]}\n                    stateDistrictWiseData={districtData}\n                    stateTestData={testData}\n                    isCountryLoaded={false}\n                    mapOptionProp={mapOption}\n                  />\n                }\n              </React.Fragment>\n            )}\n\n            {fetched && (\n              <div className=\"meta-secondary\">\n                <div className=\"alert\">\n                  <Icon.AlertCircle />\n                  <div className=\"alert-right\">\n                    Awaiting district details for{' '}\n                    {districtData[stateName]?.districtData['Unknown']\n                      ?.confirmed || '0'}{' '}\n                    cases\n                  </div>\n                </div>\n                <div className=\"alert\">\n                  <Icon.Compass />\n                  <div className=\"alert-right\">\n                    Data collected from sources{' '}\n                    {sources.length > 0\n                      ? Object.keys(sources[0]).map((key, index) => {\n                          if (key.match('source') && sources[0][key] !== '') {\n                            const num = key.match(/\\d+/);\n                            return (\n                              <React.Fragment key={index}>\n                                {num > 1 ? ',' : ''}\n                                <a href={sources[0][key]}>{num}</a>\n                              </React.Fragment>\n                            );\n                          }\n                          return null;\n                        })\n                      : ''}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"state-right\">\n            {fetched && (\n              <React.Fragment>\n                <div\n                  className=\"district-bar\"\n                  style={!showAllDistricts ? {display: 'flex'} : {}}\n                >\n                  <div\n                    className=\"district-bar-left fadeInUp\"\n                    style={{animationDelay: '0.6s'}}\n                  >\n                    <h2>Top districts</h2>\n                    <div\n                      className={`districts ${\n                        showAllDistricts ? 'is-grid' : ''\n                      }`}\n                      style={\n                        showAllDistricts\n                          ? {gridTemplateRows: `repeat(${gridRowCount}, 2rem)`}\n                          : {}\n                      }\n                    >\n                      {districtData[stateName]\n                        ? Object.keys(districtData[stateName].districtData)\n                            .filter((d) => d !== 'Unknown')\n                            .sort(\n                              (a, b) =>\n                                districtData[stateName].districtData[b]\n                                  .confirmed -\n                                districtData[stateName].districtData[a]\n                                  .confirmed\n                            )\n                            .slice(0, showAllDistricts ? undefined : 5)\n                            .map((district, index) => {\n                              return (\n                                <div key={index} className=\"district\">\n                                  <h2>\n                                    {\n                                      districtData[stateName].districtData[\n                                        district\n                                      ].confirmed\n                                    }\n                                  </h2>\n                                  <h5>{district}</h5>\n                                  <div className=\"delta\">\n                                    <Icon.ArrowUp />\n                                    <h6>\n                                      {\n                                        districtData[stateName].districtData[\n                                          district\n                                        ].delta.confirmed\n                                      }\n                                    </h6>\n                                  </div>\n                                </div>\n                              );\n                            })\n                        : ''}\n                    </div>\n                    {districtData[stateName] &&\n                      Object.keys(districtData[stateName].districtData).length >\n                        5 && (\n                        <button\n                          className=\"button\"\n                          onClick={toggleShowAllDistricts}\n                        >\n                          {showAllDistricts ? `View less` : `View all`}\n                        </button>\n                      )}\n                  </div>\n                  <div className=\"district-bar-right\">\n                    <div\n                      className=\"happy-sign fadeInUp\"\n                      style={{animationDelay: '0.6s'}}\n                    >\n                      {timeseries\n                        .slice(-5)\n                        .every((day) => day.dailyconfirmed === 0) && (\n                        <div className=\"alert is-green\">\n                          <Icon.Smile />\n                          <div className=\"alert-right\">\n                            No new confirmed cases in the past five days\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    {\n                      <DeltaBarGraph\n                        timeseries={timeseries.slice(-5)}\n                        arrayKey={'dailyconfirmed'}\n                      />\n                    }\n                  </div>\n                </div>\n\n                {false && (\n                  <Link to=\"/essentials\">\n                    <div\n                      className=\"to-essentials fadeInUp\"\n                      style={{animationDelay: '0.9s'}}\n                    >\n                      <h2>Go to essentials</h2>\n                      <Icon.ArrowRightCircle />\n                    </div>\n                  </Link>\n                )}\n\n                <TimeSeriesExplorer timeseries={timeseries} />\n              </React.Fragment>\n            )}\n          </div>\n\n          <div className=\"state-left\">\n            <div className=\"Clusters fadeInUp\" style={{animationDelay: '0.8s'}}>\n              <h1>Network of Transmission</h1>\n              <Clusters stateCode={stateCode} />\n            </div>\n          </div>\n\n          <div className=\"state-right\"></div>\n        </div>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default React.memo(State);\n"]},"metadata":{},"sourceType":"module"}